@using Alfred.Client.Services.Interfaces
@using Alfred.Client.Models
@inject IAuthService AuthService
@inject IJSRuntime JsRuntime

@if (_user != null)
{
    if (_authenticated)
    {
        @ChildContent
    }
    else
    {
        <h1 align="center">Sorry you are not authorized to view this page</h1>
    }
}
else
{
    <span @onclick="ReAuthorize">
      <Login/>
    </span>
 }

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Role { get; set; }

    User _user;
    bool _authenticated = false;

    public async Task ReAuthorize()
    {
        await JsRuntime.InvokeVoidAsync("reload");
    }

    protected override async Task OnInitializedAsync()
    {
        await AuthService.Authorize();
        _user = AuthService.User;
        if (_user != null)
        {
            Role ??= Roles.User;
            var userRoles = _user.Roles;
            foreach (var role in Role.Split(",").Select(x => x.Trim()))
            {
                if (userRoles.Contains(role))
                {
                    _authenticated = true;
                }
            }
        }
    }

}