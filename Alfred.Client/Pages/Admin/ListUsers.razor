@page "/Admin/Users"
@using Alfred.Client.Dtos.Admin

<AuthorizedView Role=@($"{Roles.Admin},{Roles.Core},{Roles.Editor},{Roles.Staff}")>
    <div class="row">
        <div class="col-md-12 text-right mb-2">
            <a href="/Admin/User/Add">
                <RadzenButton Text="Add User"/>
            </a>
            <RadzenButton Click="@(async () => await Refresh(true))" Icon="cached" Style="margin-bottom: 20px; width: 80px"/>
        </div>
    </div>
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
                AllowSorting="true" Data="@_users.Data" TItem="UserForListViewDto">
        <Columns>
            <RadzenGridColumn TItem="UserForListViewDto" Property="Id" Title="Id" width="60px"/>
            <RadzenGridColumn TItem="UserForListViewDto" Property="Name" Title="Name"/>
            <RadzenGridColumn TItem="UserForListViewDto" Property="Email" Title="E-mail"/>
            <RadzenGridColumn TItem="UserForListViewDto" Property="MobileNumber" Title="Phone"/>
        </Columns>
    </RadzenGrid>
    @if (_loading)
    {
        <div class="spinner"></div>
    }
</AuthorizedView>

@code{

    UserListResponseDto _users = new UserListResponseDto();
    bool _loading = false;

    async Task Refresh(bool refresh = false)
    {
        _users = await State.UserList();
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

}